<!doctype html>
<html lang=en>
<head>
<meta charset=utf-8>
<title>Dwarf II</title>
</head>
<body onresize="groesse()" style="background-color:#cccccc">
<p style="font: 175% bold italic sans-serif; font-variant: small-caps; text-align:center; margin: 3px;">I'm just a little Dwarf!</p>
<p>
    <input type="button" value="CamOn" onclick="cam('on')">
    <input type="button" value="CamOff" onclick="cam('off')">
    &bull;
    <input type="button" value="-" onclick="cam('fm')">
    <input type="button" value="focus" onclick="cam('fa')">
    <input type="button" value="+" onclick="cam('fp')">
    &bull;
    <input type="button" value="&larr;" onclick="mov('go',0,1)">
    <input type="button" value="&#9632;" onclick="mov('st',0,1)">
    <input type="button" value="&rarr;" onclick="mov('go',1,1)">
    <input type="button" value="&uarr;" onclick="mov('go',0,2)">
    <input type="button" value="&#9632;" onclick="mov('st',0,2)">
    <input type="button" value="&darr;" onclick="mov('go',1,2)">
    <input type="checkbox" style="width: 20px;" id="mode" title="Continous mode">
    <select id="step" title="Motor stepp divide">
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="4">4</option>
        <option value="8">8</option>
        <option value="16">16</option>
        <option value="32" selected>32</option>
        <option value="64">64</option>
        <option value="128">128</option>
        <option value="256">256</option>
    </select>
    <input type="number" style="width: 50px;" id="speed" value="800" title="Speed">
    <input type="number" style="width: 40px;" id="pulse" value="100" title="Stepps (Pulse mode)">
    <input type="number" style="width: 40px;" id="acc" value="10" title="Acceleration (stepps)">
</p>

<div style="position:relative; text-align:center;">
    <div style="position:relative;" id="img_a"><img id="stream_a" src="" ondblclick="cam('fs', event)"/></div>
    <div style="position:absolute; left:0px; top:0px;" id="img_b"><img id="stream_b" src="" onclick="swap()" /></div>
     
</div>
<div style="position:absolute; left:0px; top:0px; width:60px; height:38px; border: solid 1px yellow; visibility:hidden;" id="mrk"></div>
<div style="position: absolute; right:50px; top:-3px; transform: rotate(-90deg);" id="pwi">&#128267;</div>
<div style="position:absolute; right:10px; top:3px; width:40px; height:12px; text-align:right; vertical-align:bottom; font: 75% sans-serif;" id="pwr"></div>
<div style="width:400px; height: 1000px; background-color: black; display: none;"></div>


<script>
    //********************************************************* var
    const $ = function (x) {return document.getElementById(x);};
    var thirdstream = "http://" + window.location.host + ":8092/thirdstream";
    var mainstream = "http://" + window.location.host + ":8092/mainstream";
    var ws = new WebSocket("ws://" + window.location.host + ":9900/");
    var stm_a = document.getElementById('stream_a');
    var stm_b = document.getElementById('stream_b');
    var img_a = document.getElementById('img_a');
    var img_b = document.getElementById('img_b');
    var mrk   = document.getElementById('mrk');
    var pre_swp = false;

    //********************************************************* init
    stm_a.src = thirdstream;
    stm_b.src = mainstream;


    //********************************************************* ws
    ws.onopen = function () {
        console.log("Verbindung wurde erfolgreich aufgebaut");
        //init();
        ws.send(JSON.stringify({"interface": 11003}));
        ws.send(JSON.stringify({"interface": 11011}));
    };
    ws.onmessage = function (messageEvent) {
        var rv = JSON.parse(messageEvent.data);
        if (rv.interface==11011){
            if (rv.value==0){
                $('pwi').innerHTML="&#128267;";
            }else{
                $('pwi').innerHTML="&#128268;";
            }

        }else if (rv.interface==11003){
            $('pwr').innerHTML=""+rv.value+"%";
        }else{
            console.log(messageEvent.data);
        }
    };
    ws.onerror = function (errorEvent) {
        console.log("Error! Die Verbindung wurde unerwartet geschlossen");
    };
    ws.onclose = function (closeEvent) {
        console.log('Die Verbindung wurde geschlossen --- Code: ' + closeEvent.code + ' --- Grund: ' + closeEvent.reason);
    };


    //********************************************************* func
    _opL = function(obj){return (obj.offsetParent != null)?obj.offsetLeft + _opL(obj.offsetParent):obj.offsetLeft;}
    _opT = function(obj){return (obj.offsetParent != null)?obj.offsetTop + _opT(obj.offsetParent):obj.offsetTop;}

    function groesse(){
        var pre = Math.floor(window.innerWidth/5);
        if (pre<80) pre = 80;
        stm_a.width=Math.floor(window.innerWidth)-20;
        stm_b.width=Math.floor(pre);
        img_a.width=Math.floor(window.innerWidth)-20;
        img_b.width=Math.floor(pre);
    }
    function cam(val){
        if (val=='on'){
            ws.send(JSON.stringify({"camId": 0,"interface": 10000}));
            ws.send(JSON.stringify({"camId": 1,"interface": 10000}));
        }
        if (val=='off'){
            ws.send(JSON.stringify({"camId": 0,"interface": 10017}));
            ws.send(JSON.stringify({"camId": 1,"interface": 10017}));
        }
        if (val=='fm'){
            ws.send(JSON.stringify({"interface": 10100,"id":3,'mode':2,"mstep":1,"speed":305,"direction":1,"pulse":1,"accelStep":0}));
        }
        if (val=='fa'){
            ws.send(JSON.stringify({"camId": 0,"interface": 10211,'mode':1,'centerX':(1920/2),'centerY':(1080/2)}));
        }
        if (val=='fp'){
            ws.send(JSON.stringify({"interface": 10100,"id":3,'mode':2,"mstep":1,"speed":305,"direction":0,"pulse":1,"accelStep":0}));
        }
        if (val=='fs'){
            ev = cam.arguments[1];
            var imgh = img_a.width/1920*1080;
            var gx = (((ev.pageX-_opL(img_a))-(img_a.width/1.96))/img_a.width*1000);
            var gy = (((ev.pageY-_opT(img_a))-(imgh/1.96))/imgh*1000);
            console.log(
                "X Coordinate: " + gx + "\n" + 
                "Y Coordinate: " + gy);
            mrk.style.left = (ev.pageX-30) + "px";
            mrk.style.top  = (ev.pageY-19) + "px";
            mrk.style.visibility = 'visible';
            setTimeout(function(){mrk.style.visibility = 'hidden'}, 250);
            
            if (pre_swp){
            }else{
                //alert("goto");
                console.log(ev.pageY + " " + ev.target.y);
                var x=0;
                dw_go(1,2,8,1600,(gx>0)?1:0,Math.abs(Math.floor(gx*11)),10);
                dw_go(2,2,8,1600,(gy>0)?1:0,Math.abs(Math.floor(gy*6.3)),10);

            }
        }
    }
    function mov(val,di,mo){
        if (val=="go"){
            var ma = $("step").value;
            dw_go(
                parseInt(mo),
                (($("mode").checked)?1:2),//parseInt($("mode").value),
                parseInt($("step").value),
                parseInt($("speed").value),
                parseInt(di),
                parseInt($("pulse").value),
                parseInt($("acc").value)
            )
        }
        if (val=="st"){
            ws.send(JSON.stringify({"interface": 10101,"id":mo,'decelStep':0}));
        }
    }
    function dw_go(id,mo,st,sp,di,pu,ac){
        var data ={
                "interface": 10100,
                "id":parseInt(id),
                'mode':parseInt(mo),
                'mStep':parseInt(st),
                'speed':parseInt(sp),
                'direction':parseInt(di),
                'pulse':parseInt(pu),
                'accelStep':parseInt(ac)
        }
        console.log(data);
        ws.send(JSON.stringify(data));
    }
    function swap(){
        stm_a.src = (pre_swp)?thirdstream:mainstream;
        stm_b.src = (pre_swp)?mainstream:thirdstream;
        pre_swp = !pre_swp;
    }
    groesse();
</script>
</body>
</html>
